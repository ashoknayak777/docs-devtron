"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[9492],{5231:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"reference/glossary","title":"Glossary","description":"Artifacts","source":"@site/docs/reference/glossary.md","sourceDirName":"reference","slug":"/reference/glossary","permalink":"/docs/reference/glossary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Resources","permalink":"/docs/reference/resources"},"next":{"title":"Troubleshooting Guide","permalink":"/docs/FAQs/devtron-troubleshoot"}}');var t=o(4848),r=o(8453);const s={},a="Glossary",l={},c=[{value:"Artifacts",id:"artifacts",level:3},{value:"ArgoCD Apps",id:"argocd-apps",level:3},{value:"Deployment Template",id:"deployment-template",level:3},{value:"Build Context",id:"build-context",level:3},{value:"Build Pipeline",id:"build-pipeline",level:3},{value:"Chart Store",id:"chart-store",level:3},{value:"Cluster",id:"cluster",level:3},{value:"Commit Hash",id:"commit-hash",level:3},{value:"ConfigMaps",id:"configmaps",level:3},{value:"Container/OCI Registry",id:"containeroci-registry",level:3},{value:"Cordoning",id:"cordoning",level:3},{value:"CRD",id:"crd",level:3},{value:"CronJob",id:"cronjob",level:3},{value:"Deployment Charts",id:"deployment-charts",level:3},{value:"DaemonSet",id:"daemonset",level:3},{value:"Deployment Strategy",id:"deployment-strategy",level:3},{value:"Devtron Apps",id:"devtron-apps",level:3},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Draining",id:"draining",level:3},{value:"Endpoints",id:"endpoints",level:3},{value:"EndpointSlice",id:"endpointslice",level:3},{value:"Environment",id:"environment",level:3},{value:"External Links",id:"external-links",level:3},{value:"FluxCD Apps",id:"fluxcd-apps",level:3},{value:"GitOps",id:"gitops",level:3},{value:"Helm Apps",id:"helm-apps",level:3},{value:"Helm Charts/Packages",id:"helm-chartspackages",level:3},{value:"Image",id:"image",level:3},{value:"Ingress Host URL",id:"ingress-host-url",level:3},{value:"Job",id:"job",level:3},{value:"Load Balancer",id:"load-balancer",level:3},{value:"Load Balancer URL",id:"load-balancer-url",level:3},{value:"Manifest",id:"manifest",level:3},{value:"Material",id:"material",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Node Taint",id:"node-taint",level:3},{value:"NodePort",id:"nodeport",level:3},{value:"Nodes",id:"nodes",level:3},{value:"Objects",id:"objects",level:3},{value:"Pod",id:"pod",level:3},{value:"Pre-build",id:"pre-build",level:3},{value:"Post-build",id:"post-build",level:3},{value:"Pre-deployment",id:"pre-deployment",level:3},{value:"Post-deployment",id:"post-deployment",level:3},{value:"ReplicaSet",id:"replicaset",level:3},{value:"Repo",id:"repo",level:3},{value:"Resource Allocation",id:"resource-allocation",level:3},{value:"Rollback",id:"rollback",level:3},{value:"Secrets",id:"secrets",level:3},{value:"Security Context",id:"security-context",level:3},{value:"Service",id:"service",level:3},{value:"StatefulSet",id:"statefulset",level:3},{value:"Target Platform",id:"target-platform",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"glossary",children:"Glossary"})}),"\n",(0,t.jsx)(n.h3,{id:"artifacts",children:"Artifacts"}),"\n",(0,t.jsxs)(n.p,{children:["An immutable blob of data generated as an output after the execution of a job, build, or deployment process, e.g., container image, helm chart. In Devtron, you can view the artifacts in the ",(0,t.jsx)(n.code,{children:"Build History"})," and ",(0,t.jsx)(n.code,{children:"Deployment History"})," of your application. Whereas, job artifacts are visible in the ",(0,t.jsx)(n.code,{children:"Run history"})," of your job."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Once a build is complete, you can view the build artifacts by going to Application Management \u2192 Applications (choose your app) \u2192 Build History (tab) \u2192 (choose a pipeline and date of triggering the build) \u2192 Artifacts (tab)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Once a deployment is complete, you can view the deployment artifacts by going to Application Management \u2192 Applications (choose your app) \u2192 Deployment History (tab) \u2192 (choose an environment and date of deployment) \u2192 Artifacts (tab)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Once a job is complete, you can view the job artifacts by going to Automation & Enablement \u2192 Jobs \u2192 Run history (tab) \u2192 (choose a pipeline and date of triggering the build) \u2192 Artifacts (tab)."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"argocd-apps",children:"ArgoCD Apps"}),"\n",(0,t.jsxs)(n.p,{children:["ArgoCD Apps are the micro-services deployed using a ",(0,t.jsx)(n.a,{href:"#gitops",children:"GitOps"})," deployment tool named ",(0,t.jsx)(n.a,{href:"https://argo-cd.readthedocs.io/en/stable/",children:"Argo CD"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If ArgoCD applications are present in your cluster, they will appear in the ",(0,t.jsx)(n.a,{href:"/docs/user-guide/applications#enabling-argocd-app-listing",children:"ArgoCD Apps listing"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"deployment-template",children:"Deployment Template"}),"\n",(0,t.jsx)(n.p,{children:"A deployment template is a manifest of the application defining its runtime behavior. You can select one of the default deployment charts or custom deployment charts created by super-admin."}),"\n",(0,t.jsx)(n.p,{children:"It\u2019s a single entry point for you to enter the values, so that when the application is deployed your filled values go to the respective template files (YAML), and accordingly the resources would be created."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you get the option to select a deployment template in the ",(0,t.jsx)(n.code,{children:"Configurations"})," tab at the time of creating an application. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/base-config/deployment-template",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"build-context",children:"Build Context"}),"\n",(0,t.jsxs)(n.p,{children:["For building a docker image we require a ",(0,t.jsx)(n.a,{href:"#dockerfile",children:"Dockerfile"})," and a build context. The Dockerfile contains the instructions to build. Context is the path where the build process may refer for getting the files required for build."]}),"\n",(0,t.jsxs)(n.p,{children:["To build files from the root, use (.) as the build context. Or to refer a subdirectory, enter the path in the format ",(0,t.jsx)(n.code,{children:"/myfolder"})," or ",(0,t.jsx)(n.code,{children:"/myfolder/mysubfolder"}),". If the path is not set, the default path will be the root directory of selected git repository."]}),"\n",(0,t.jsx)(n.p,{children:"Go to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Build Configuration \u2192 (choose 'I have a Dockerfile') \u2192 Set Build Context."}),"\n",(0,t.jsx)(n.h3,{id:"build-pipeline",children:"Build Pipeline"}),"\n",(0,t.jsxs)(n.p,{children:["A series of automated steps that transform source code into a deployable container image. In Devtron, you can create a build pipeline by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Workflow Editor \u2192 New Workflow. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/ci-pipeline",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"chart-store",children:"Chart Store"}),"\n",(0,t.jsxs)(n.p,{children:["A place where all Helm charts are centrally listed for users to deploy applications on Kubernetes. In Devtron, the chart store is available in the left sidebar. You can view, configure, and deploy the existing charts or add new chart repositories too. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/global-configurations/chart-repo",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"cluster",children:"Cluster"}),"\n",(0,t.jsx)(n.p,{children:"A cluster in Kubernetes refers to a set of connected computers (nodes) that collectively manage containerized applications using Kubernetes. It provides resources and services to run, manage, and scale applications."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can view the list of clusters in 'Global Configurations' as well as 'Resource Browser'. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/resource-browser/",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"commit-hash",children:"Commit Hash"}),"\n",(0,t.jsxs)(n.p,{children:["A unique identifier representing a specific version of source code in a Git ",(0,t.jsx)(n.a,{href:"#repo",children:"repository"}),". In Devtron, you can view the commit hash of the top 15 commits you pushed to your branch while selecting the git material under the ",(0,t.jsx)(n.code,{children:"Build & Deploy"})," tab of your application."]}),"\n",(0,t.jsx)(n.h3,{id:"configmaps",children:"ConfigMaps"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes objects used to store configuration data as key-value pairs. They allow separation of configuration from application code, making it easier to manage and update settings."}),"\n",(0,t.jsxs)(n.p,{children:["You can use different ConfigMaps for respective environments too. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/base-config/config-maps",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"containeroci-registry",children:"Container/OCI Registry"}),"\n",(0,t.jsxs)(n.p,{children:["It is a collection of repositories that store container images. It allows developers to store, share, and manage images used to deploy containers. In Devtron, you can add a container registry by going to Global Configurations \u2192 Container / OCI Registry. Your CI images are pushed to the container registry you configure. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/global-configurations/container-registries",children:"Read More..."}),"."]}),"\n",(0,t.jsx)(n.p,{children:"An OCI-compliant registry can also store artifacts (such as helm charts). Here, OCI stands for Open Container Initiative. It is an open industry standard for container formats and registries."}),"\n",(0,t.jsx)(n.h3,{id:"cordoning",children:"Cordoning"}),"\n",(0,t.jsxs)(n.p,{children:["Temporarily marking a node as unschedulable, preventing new pods from being assigned to it. In Devtron, you can cordon a node by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Nodes \u2192 (click on a node) \u2192 Cordon (available in blue). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/resource-browser/nodes#cordon-a-node",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"crd",children:"CRD"}),"\n",(0,t.jsx)(n.p,{children:"A Custom Resource Definition (CRD) allows you to add custom resource types to Kubernetes, extending its capabilities to support configurations specific to your application. In Devtron, CRDs enable you to manage these custom resources alongside standard Kubernetes resources, making it easier to handle specialized application requirements within the platform."}),"\n",(0,t.jsx)(n.h3,{id:"cronjob",children:"CronJob"}),"\n",(0,t.jsxs)(n.p,{children:["CronJob is used to create Jobs on a repeating schedule. It is commonly used for running periodic tasks with no manual intervention. In Devtron, you can view a list of cronjobs by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Workloads \u2192 CronJob. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/base-config/deployment-template-types/job-and-cronjob#2-cronjob",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"deployment-charts",children:"Deployment Charts"}),"\n",(0,t.jsxs)(n.p,{children:["Devtron offers a variety of ready-made Helm charts for common tasks and functions. If you have a specific need that isn't met by these preconfigured charts, super-admins have the permission to upload their own charts. Once uploaded, these charts become accessible for use by all users on the Devtron platform. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/global-configurations/deployment-charts",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"daemonset",children:"DaemonSet"}),"\n",(0,t.jsx)(n.p,{children:"A Kubernetes object that ensures a specific pod runs on all or certain nodes within a cluster, often used for tasks such as logging or monitoring."}),"\n",(0,t.jsx)(n.p,{children:"In Devtron, you can view a list of DaemonSets by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Workloads \u2192 DaemonSet."}),"\n",(0,t.jsx)(n.h3,{id:"deployment-strategy",children:"Deployment Strategy"}),"\n",(0,t.jsx)(n.p,{children:"A defined approach for deploying updates or changes to applications. Devtron supports rolling updates, blue-green deployments, canary releases, and recreate strategy."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can choose a deployment strategy by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Workflow Editor \u2192 (edit deployment pipeline) \u2192 Deployment Strategy. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/cd-pipeline#deployment-strategies",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"devtron-apps",children:"Devtron Apps"}),"\n",(0,t.jsx)(n.p,{children:"Devtron Apps are the micro-services deployed using Kubernetes-native CI/CD with Devtron. To create one, go to Application Management \u2192 Applications \u2192 Create (button) \u2192 Custom App."}),"\n",(0,t.jsx)(n.h3,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,t.jsxs)(n.p,{children:["A script that defines how to build a Docker ",(0,t.jsx)(n.a,{href:"#image",children:"container image"}),". It includes instructions to assemble the image's base, dependencies, and application code. It's recommended that you include a Dockerfile with your source code."]}),"\n",(0,t.jsxs)(n.p,{children:["However, in case you don't have a Dockerfile, Devtron helps you create one. Go to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Build Configuration. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/docker-build-configuration#build-docker-image-by-creating-dockerfile",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"draining",children:"Draining"}),"\n",(0,t.jsx)(n.p,{children:"Evacuating pods from a node before cordoning it, ensuring that running pods are gracefully rescheduled on other nodes."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can drain a node by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Nodes \u2192 (click on a node) \u2192 Drain (available in blue). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/resource-browser/nodes#drain-a-node",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"endpoints",children:"Endpoints"}),"\n",(0,t.jsxs)(n.p,{children:["Endpoints are nothing but the address of your pods. When something inside or outside the cluster (e.g., your browser) wants to connect with your service (e.g., your application), endpoints are the way for Kubernetes to make this happen. To know more, refer to ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/service-resources/endpoints-v1/",children:"Endpoints"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"endpointslice",children:"EndpointSlice"}),"\n",(0,t.jsxs)(n.p,{children:["When a cluster contains more than a hundred pods, for example, EndpointSlice splits the endpoints of the pods into small, managable sizes and helps in keeping track of the endpoints of the pods within a Kubernetes cluster. To know more, refer to ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/endpoint-slices/",children:"EndpointSlices"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"environment",children:"Environment"}),"\n",(0,t.jsxs)(n.p,{children:["You can deploy your application to one or more environments (e.g., development, testing, production). In Devtron, Environment = ",(0,t.jsx)(n.a,{href:"#cluster",children:"Cluster"})," + ",(0,t.jsx)(n.a,{href:"#namespace",children:"Namespace"}),". For a given application, you cannot have multiple CD pipelines for an environment. For e.g., if an application named 'test-app' is deployed on an environment named 'test-environment', you cannot create another deployment (CD) pipeline for the same app and environment."]}),"\n",(0,t.jsxs)(n.p,{children:["Your application can have different deployment configurations for respective environments. For e.g., the number of ",(0,t.jsx)(n.a,{href:"#replicaset",children:"ReplicaSet"})," could be 2 for staging environment, whereas it could be 5 for production."]}),"\n",(0,t.jsxs)(n.p,{children:["Similarly, the CPU and memory resources can be different for each environment. This is possible through Environment Overrides. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/environment-overrides",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"external-links",children:"External Links"}),"\n",(0,t.jsxs)(n.p,{children:["You can add external links related to the application. For e.g., you can add Prometheus, Grafana, and many more to your application by going to Application Management \u2192 Configurations \u2192 External Links. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/global-configurations/external-links",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"fluxcd-apps",children:"FluxCD Apps"}),"\n",(0,t.jsxs)(n.p,{children:["FluxCD Apps are the micro-services deployed using a ",(0,t.jsx)(n.a,{href:"#gitops",children:"GitOps"})," deployment tool named ",(0,t.jsx)(n.a,{href:"https://fluxcd.io/",children:"Flux CD"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If FluxCD applications are present in your cluster, they will appear in the ",(0,t.jsx)(n.a,{href:"/docs/user-guide/applications#view-external-fluxcd-app-listing",children:"FluxCD Apps listing"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"gitops",children:"GitOps"}),"\n",(0,t.jsxs)(n.p,{children:["A methodology for managing and automating Kubernetes deployments using Git repositories as the source of truth. Changes to the desired state of the cluster are driven by Git commits. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/global-configurations/gitops",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"helm-apps",children:"Helm Apps"}),"\n",(0,t.jsxs)(n.p,{children:["Apps deployed using Helm Chart from the ",(0,t.jsx)(n.code,{children:"Chart Store"})," section of Devtron. In Devtron, you can view such apps under a tab named ",(0,t.jsx)(n.code,{children:"Helm Apps"})," in the Applications section. To create one, go to Application Management \u2192 Applications \u2192 Create (button) \u2192 From Chart store."]}),"\n",(0,t.jsx)(n.h3,{id:"helm-chartspackages",children:"Helm Charts/Packages"}),"\n",(0,t.jsxs)(n.p,{children:["Packages that contain pre-configured Kubernetes resources and configurations. Helm charts are used to define, install, and upgrade applications on Kubernetes clusters. Refer ",(0,t.jsx)(n.a,{href:"#chart-store",children:"chart store"})," to know more."]}),"\n",(0,t.jsx)(n.h3,{id:"image",children:"Image"}),"\n",(0,t.jsx)(n.p,{children:"A packaged and standalone software that contains the code and dependencies needed to run a containerized application. Using Devtron, you can build a container image of your application, push it to a container registry, and deploy it on your Kubernetes cluster."}),"\n",(0,t.jsxs)(n.p,{children:["Since images are platform-agnostic, you don't have to worry about compiling your application to work on different systems. With Devtron, you can enable automatic image builds and vulnerability scanning whenever you make edits to your source code. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/ci-pipeline",children:"Read More..."})]}),"\n",(0,t.jsxs)(n.p,{children:["You can also view the list of image builds while preparing your deployment in the ",(0,t.jsx)(n.code,{children:"Build & Deploy"})," tab of your application (provided the CI stage is successful)."]}),"\n",(0,t.jsx)(n.h3,{id:"ingress-host-url",children:"Ingress Host URL"}),"\n",(0,t.jsxs)(n.p,{children:["A web address (e.g., ",(0,t.jsx)(n.code,{children:"https://your-company.com"}),") that people use to access your application via ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",children:"Ingress"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"job",children:"Job"}),"\n",(0,t.jsx)(n.p,{children:"In Devtron, there is a job that is very similar to Kubernetes job. A Kubernetes job is an object used to create one or more pods to complete a specific task or job and then terminate."}),"\n",(0,t.jsx)(n.p,{children:"If you are a super-admin in Devtron, you can view Jobs in the sidebar."}),"\n",(0,t.jsx)(n.h3,{id:"load-balancer",children:"Load Balancer"}),"\n",(0,t.jsx)(n.p,{children:"Distributes incoming network traffic across multiple instances or nodes to ensure efficient resource utilization and improved performance. In Kubernetes, Load Balancer is a service type. Behind the scenes, the managed Kubernetes service connects to the load balancer service of the respective cloud service provider and creates a load balancer, mapping it to the Kubernetes service."}),"\n",(0,t.jsx)(n.p,{children:"GKE and AKS provide the public IP of the Load Balancer as the service endpoint, while in the case of EKS, it provides a non-customizable DNS name."}),"\n",(0,t.jsx)(n.h3,{id:"load-balancer-url",children:"Load Balancer URL"}),"\n",(0,t.jsxs)(n.p,{children:["A web address (e.g., ",(0,t.jsx)(n.code,{children:"http://sdk39dksig3-23kd.us-west-2.elb.amazonaws.com"}),") that is automatically generated when the ",(0,t.jsx)(n.a,{href:"#load-balancer",children:"Load Balancer"})," is created. When this load balancer URL is accessed by an external system (e.g., applications running outside the cluster), the load balancer then splits the traffic among different pods and services."]}),"\n",(0,t.jsx)(n.h3,{id:"manifest",children:"Manifest"}),"\n",(0,t.jsx)(n.p,{children:"A manifest is a YAML file that describes each component or resource of your Kubernetes object and the state you want your cluster to be in once applied. A manifest specifies the desired state of an object that Kubernetes will maintain when you apply the manifest."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can view the manifest of K8s resources under ",(0,t.jsx)(n.code,{children:"App Details"})," and also under ",(0,t.jsx)(n.code,{children:"Resource Browser"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"material",children:"Material"}),"\n",(0,t.jsxs)(n.p,{children:["In Git Repo, the source code of your application in a given commit is referred as material. The option to choose a Git material will be available in the CI stage under the ",(0,t.jsx)(n.code,{children:"Build & Deploy"})," tab of your application. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/jobs/triggering-job",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"namespace",children:"Namespace"}),"\n",(0,t.jsx)(n.p,{children:"A namespace is a way to organize and isolate resources within a Kubernetes cluster. It provides a logical separation between different applications or environments within a cluster."}),"\n",(0,t.jsx)(n.p,{children:"In Devtron, you can view a list of namespaces by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Namespaces."}),"\n",(0,t.jsx)(n.h3,{id:"node-taint",children:"Node Taint"}),"\n",(0,t.jsx)(n.p,{children:"A setting applied to a node that influences the scheduling of pods. Taints can restrict which pods are allowed to run on the node."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can edit the taints of a node by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Nodes \u2192 (click on a node) \u2192 Edit taints (available in blue). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/resource-browser/nodes#taint-a-node",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"nodeport",children:"NodePort"}),"\n",(0,t.jsx)(n.p,{children:"A Kubernetes service type that exposes a port on each node in the cluster, making a service accessible externally."}),"\n",(0,t.jsx)(n.h3,{id:"nodes",children:"Nodes"}),"\n",(0,t.jsx)(n.p,{children:"The physical or virtual machines that make up a Kubernetes cluster, where containers are scheduled to run."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can view nodes by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Nodes. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/resource-browser/nodes",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"objects",children:"Objects"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes objects are the building blocks that define and manage your applications running on the platform. They are also known as 'Resources' or 'Kinds'. This includes nodes, pods, deployment, cronjob, configmap, and many more."}),"\n",(0,t.jsxs)(n.p,{children:["Devtron's ",(0,t.jsx)(n.a,{href:"/docs/user-guide/resource-browser/",children:"Resource Browser"})," helps you manage all such objects present in your clusters."]}),"\n",(0,t.jsx)(n.h3,{id:"pod",children:"Pod"}),"\n",(0,t.jsx)(n.p,{children:"The smallest deployable unit in Kubernetes, consisting of one or more containers that share storage and network resources within the same context."}),"\n",(0,t.jsx)(n.p,{children:"In Devtron, you can view a list of Pods by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Workloads \u2192 Pod. In Devtron, you can create a pod by going to Resource Browser \u2192 Create Resource (button)."}),"\n",(0,t.jsx)(n.h3,{id:"pre-build",children:"Pre-build"}),"\n",(0,t.jsx)(n.p,{children:"Actions or processes performed before the actual image-building process in a containerized application's deployment pipeline, e.g., Jira Issue Validator."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can configure pre-build actions by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Workflow Editor \u2192 (edit build pipeline) \u2192 Pre-build stage (tab) \u2192 Add task (button). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/pre-post-tasks#creating-prepost-tasks",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"post-build",children:"Post-build"}),"\n",(0,t.jsxs)(n.p,{children:["Actions or processes performed after the ",(0,t.jsx)(n.a,{href:"#image",children:"image"})," building process in a containerized application's deployment pipeline, e.g., email notification about build status."]}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can configure post-build actions by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Workflow Editor \u2192 (edit build pipeline) \u2192 Post-build stage (tab) \u2192 Add task (button). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/pre-post-tasks#creating-prepost-tasks",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"pre-deployment",children:"Pre-deployment"}),"\n",(0,t.jsx)(n.p,{children:"Steps, scripts, or configurations executed before deploying a new version of an application to a Kubernetes cluster."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can configure pre-deployment actions by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Workflow Editor \u2192 (edit deployment pipeline) \u2192 Pre-deployment stage (tab) \u2192 Add task (button). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/cd-pipeline#pre-deployment-stage",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"post-deployment",children:"Post-deployment"}),"\n",(0,t.jsx)(n.p,{children:"Actions, checks, or processes carried out after a new version of an application is successfully deployed to a Kubernetes cluster, e.g., Jira Issue Updater."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can configure post-deployment actions by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Workflow Editor \u2192 (edit deployment pipeline) \u2192 Post-deployment stage (tab) \u2192 Add task (button). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/workflow/cd-pipeline#post-deployment-stage",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"replicaset",children:"ReplicaSet"}),"\n",(0,t.jsx)(n.p,{children:"A Kubernetes object responsible for maintaining a specified number of replica pods, ensuring high availability and desired scaling."}),"\n",(0,t.jsx)(n.p,{children:"In Devtron, you can view the deployed ReplicaSet by going to Application Management \u2192 Applications (choose your app) \u2192 App Details (tab) \u2192 K8s Resources (under Application Metrics section)."}),"\n",(0,t.jsx)(n.h3,{id:"repo",children:"Repo"}),"\n",(0,t.jsx)(n.p,{children:'Abbreviation for "repository". It could either signify a Git repo, container repo, or helm repo.'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Git repo"})," - A version control system (like Git) that stores and manages source code and other project assets. Once you create a git repo, you can add it in Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Git Repository \u2192 Add Git Repository."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Container repo"})," - A collection of ",(0,t.jsx)(n.a,{href:"#image",children:"container images"}),", e.g., Docker repository."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Helm repo"})," - Also known as chart repo. You can add it in Global Configurations."]}),"\n",(0,t.jsx)(n.h3,{id:"resource-allocation",children:"Resource Allocation"}),"\n",(0,t.jsxs)(n.p,{children:["The process where you allocate resources (e.g., ",(0,t.jsx)(n.code,{children:"memory"}),") to different environments depending on your requirement. For example, you might require ",(0,t.jsx)(n.code,{children:"50Mi"})," memory in a QA environment, whereas the same application might need ",(0,t.jsx)(n.code,{children:"100Mi"})," memory in a production-grade environment."]}),"\n",(0,t.jsx)(n.h3,{id:"rollback",children:"Rollback"}),"\n",(0,t.jsx)(n.p,{children:"The process of reverting a deployment to a previously known working version in case of errors or issues with the current version."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can rollback a deployment by going to Application Management \u2192 Applications (choose your app) \u2192 Build & Deploy (tab) \u2192 (click the rollback icon in the deployment pipeline). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/deploying-application/rollback-deployment",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"secrets",children:"Secrets"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes objects used to store sensitive information, such as passwords and API keys. Secrets are encoded and can be mounted as files or environment variables in pods."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you get the option to add secrets in the ",(0,t.jsx)(n.code,{children:"App Configuration"})," tab of your application. You can use different secrets for respective environments too. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/base-config/secrets",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"security-context",children:"Security Context"}),"\n",(0,t.jsxs)(n.p,{children:["A Kubernetes resource configuration that defines security settings and permissions for pods and containers. A security context defines privilege and access control settings for a pod or container. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/base-config/deployment-template-types/deployment#security-context",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"service",children:"Service"}),"\n",(0,t.jsxs)(n.p,{children:["When the network addresses of pods changes frequently, it becomes difficult to connect to them directly. A service then acts as a stable access point to your application, and automatically redirects requests to the pods, even when they change over time. To know more, refer to ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Service"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"statefulset",children:"StatefulSet"}),"\n",(0,t.jsx)(n.p,{children:"A Kubernetes object designed for managing stateful applications, maintaining stable network identities and storage across pod rescheduling."}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, view the list of StatefulSets by going to Infrastructure Management \u2192 Resource Browser \u2192 (choose a cluster) \u2192 Workloads \u2192 StatefulSet. ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/base-config/deployment-template-types/statefulset",children:"Read More..."})]}),"\n",(0,t.jsx)(n.h3,{id:"target-platform",children:"Target Platform"}),"\n",(0,t.jsxs)(n.p,{children:["The operating system and architecture for which the ",(0,t.jsx)(n.a,{href:"#image",children:"container image"})," will be built, e.g., ubuntu/arm64, linux/amd64. The image will only be compatible to run only on the target platform chosen in the build configuration."]}),"\n",(0,t.jsxs)(n.p,{children:["In Devtron, you can choose the target platform by going to Application Management \u2192 Applications (choose your app) \u2192 App Configuration (tab) \u2192 Build Configuration \u2192 (create build pipeline) \u2192 (click ",(0,t.jsx)(n.code,{children:"Allow Override"})," button) \u2192 Target platform for the build (section). ",(0,t.jsx)(n.a,{href:"/docs/user-guide/creating-application/docker-build-configuration",children:"Read More..."})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var i=o(6540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);